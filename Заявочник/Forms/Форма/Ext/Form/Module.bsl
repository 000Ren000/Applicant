
&НаКлиенте
Процедура Сформировать(Команда)
	Если ЗначениеЗаполнено(Объект.Дата) Тогда
		СформироватьНаСервере();
		СформироватьДатуДляЗаголовкаТаблицы(Объект.Дата);   
		РасчитатьКоэффициент(Команда);
		
		Сортировать = Истина;
		ВыполнитьСортировку();
		ОбновитьИтогиФормы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДатуДляЗаголовкаТаблицы(Дата)  
	Элементы.ТоварыПр1.Заголовок = Формат(Дата - (60*60*24*1), "ДФ='ddd'");
	Элементы.ТоварыПр2.Заголовок = Формат(Дата - (60*60*24*2), "ДФ='ddd'");
	Элементы.ТоварыПр3.Заголовок = Формат(Дата - (60*60*24*3), "ДФ='ddd'");
	Элементы.ТоварыПр4.Заголовок = Формат(Дата - (60*60*24*4), "ДФ='ddd'"); 
	Элементы.ТоварыРасх5.Заголовок = Формат(Дата - (60*60*24*5), "ДФ='ddd'");
	Элементы.ТоварыРасх6.Заголовок = Формат(Дата - (60*60*24*6), "ДФ='ddd'");

	
	Элементы.ТоварыСпис1.Заголовок = Формат(Дата - (60*60*24*1), "ДФ='dd.MM.yy'");
	Элементы.ТоварыСпис2.Заголовок = Формат(Дата - (60*60*24*2), "ДФ='dd.MM.yy'");
	Элементы.ТоварыСпис3.Заголовок = Формат(Дата - (60*60*24*3), "ДФ='dd.MM.yy'");
	Элементы.ТоварыСпис4.Заголовок = Формат(Дата - (60*60*24*4), "ДФ='dd.MM.yy'");
	Элементы.ТоварыСпис5.Заголовок = Формат(Дата - (60*60*24*5), "ДФ='dd.MM.yy'");
	Элементы.ТоварыСпис6.Заголовок = Формат(Дата - (60*60*24*6), "ДФ='dd.MM.yy'");

КонецПроцедуры 

&НаСервере
Процедура СформироватьНаСервере()
	
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Ант_СтепеньПродоваемости КАК СтепеньПродоваемости
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаНоменклатуры)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ТоварыНаСкладахОбороты.Период, ДЕНЬ) КАК Период,
	|	ТоварыНаСкладахОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ТоварыНаСкладахОбороты.ВНаличииРасход, 0)) КАК Расход,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыНаСкладахОбороты.Регистратор) = ТИП(Документ.СписаниеНедостачТоваров)
	|					ИЛИ ТИПЗНАЧЕНИЯ(ТоварыНаСкладахОбороты.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
	|					ИЛИ ТИПЗНАЧЕНИЯ(ТоварыНаСкладахОбороты.Регистратор) = ТИП(Документ.ВозвратТоваровПоставщику)
	|				ТОГДА ТоварыНаСкладахОбороты.ВНаличииРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Списания
	|ПОМЕСТИТЬ втОстаткиИРасход
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(
	|			ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, -6),
	|			&ДатаОкончания,
	|			Регистратор,
	|			Номенклатура В ИЕРАРХИИ (&ГруппаНоменклатуры)
	|				И Склад = &Склад) КАК ТоварыНаСкладахОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	КОНЕЦПЕРИОДА(ТоварыНаСкладахОбороты.Период, ДЕНЬ),
	|	ТоварыНаСкладахОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ТоварыНаСкладахОбороты.ВНаличииРасход) КАК РасходЗаПериод,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыНаСкладахОбороты.Регистратор) = ТИП(Документ.СписаниеНедостачТоваров)
	|					ИЛИ ТИПЗНАЧЕНИЯ(ТоварыНаСкладахОбороты.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
	|					ИЛИ ТИПЗНАЧЕНИЯ(ТоварыНаСкладахОбороты.Регистратор) = ТИП(Документ.ВозвратТоваровПоставщику)
	|				ТОГДА ТоварыНаСкладахОбороты.ВНаличииРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СписаниеЗаПериод
	|ПОМЕСТИТЬ втРасходЗаПериод
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(
	|			&ПериодДатаНачала,
	|			&ПериодДатаОкончания,
	|			Регистратор,
	|			Номенклатура В ИЕРАРХИИ (&ГруппаНоменклатуры)
	|				И Склад = &Склад) КАК ТоварыНаСкладахОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиИРасход.Номенклатура КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -1)
	|				ТОГДА втОстаткиИРасход.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расх1,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -2)
	|				ТОГДА втОстаткиИРасход.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расх2,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -3)
	|				ТОГДА втОстаткиИРасход.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расх3,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -4)
	|				ТОГДА втОстаткиИРасход.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расх4,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -5)
	|				ТОГДА втОстаткиИРасход.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расх5,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -6)
	|				ТОГДА втОстаткиИРасход.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Расх6,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -1)
	|				ТОГДА втОстаткиИРасход.Списания
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Спис1,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -2)
	|				ТОГДА втОстаткиИРасход.Списания
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Спис2,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -3)
	|				ТОГДА втОстаткиИРасход.Списания
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Спис3,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -4)
	|				ТОГДА втОстаткиИРасход.Списания
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Спис4,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -5)
	|				ТОГДА втОстаткиИРасход.Списания
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Спис5,
	|	СУММА(ВЫБОР
	|			КОГДА втОстаткиИРасход.Период = ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, -6)
	|				ТОГДА втОстаткиИРасход.Списания
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Спис6
	|ПОМЕСТИТЬ втПодготовкаПередИтоговойТаблицей
	|ИЗ
	|	втОстаткиИРасход КАК втОстаткиИРасход
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиИРасход.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втРасходЗаПериод.РасходЗаПериод ЕСТЬ NULL
	|				И ТоварыНаСкладахОстатки.ВНаличииОстаток ЕСТЬ NULL
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Порядок,
	|	втНоменклатура.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА втНоменклатура.Номенклатура.ЕдиницаИзмерения ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ИНАЧЕ втНоменклатура.Номенклатура.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдИзм,
	|	ВЫБОР
	|		КОГДА втНоменклатура.СтепеньПродоваемости = 0
	|			ТОГДА 99
	|		ИНАЧЕ втНоменклатура.СтепеньПродоваемости
	|	КОНЕЦ КАК СтепеньПродоваемости,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК Остаток,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Расх1 - втПодготовкаПередИтоговойТаблицей.Спис1, 0) КАК Расх1,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Расх2 - втПодготовкаПередИтоговойТаблицей.Спис2, 0) КАК Расх2,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Расх3 - втПодготовкаПередИтоговойТаблицей.Спис3, 0) КАК Расх3,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Расх4 - втПодготовкаПередИтоговойТаблицей.Спис4, 0) КАК Расх4,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Спис1, 0) КАК Спис1,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Спис2, 0) КАК Спис2,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Спис3, 0) КАК Спис3,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Спис4, 0) КАК Спис4,
	|	ВЫБОР
	|		КОГДА ТоварыНаСкладахОстатки.ВНаличииОстаток - втРасходЗаПериод.РасходЗаПериод < 0
	|			ТОГДА -(ТоварыНаСкладахОстатки.ВНаличииОстаток - втРасходЗаПериод.РасходЗаПериод)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КЗаказу,
	|	ЕСТЬNULL(втРасходЗаПериод.СписаниеЗаПериод, 0) КАК СписаниеЗаПериод,
	|	ЕСТЬNULL(втРасходЗаПериод.РасходЗаПериод - втРасходЗаПериод.СписаниеЗаПериод, 0) КАК Период,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Расх5 - втПодготовкаПередИтоговойТаблицей.Спис5, 0) КАК Расх5,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Расх6 - втПодготовкаПередИтоговойТаблицей.Спис6, 0) КАК Расх6,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Спис5, 0) КАК Спис5,
	|	ЕСТЬNULL(втПодготовкаПередИтоговойТаблицей.Спис6, 0) КАК Спис6,
	|	втНоменклатура.Номенклатура.ВесЗнаменатель * втНоменклатура.Номенклатура.ВесЧислитель КАК Вес
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПодготовкаПередИтоговойТаблицей КАК втПодготовкаПередИтоговойТаблицей
	|		ПО (втНоменклатура.Номенклатура = втПодготовкаПередИтоговойТаблицей.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаОкончания, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|		ПО (втНоменклатура.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРасходЗаПериод КАК втРасходЗаПериод
	|		ПО (втНоменклатура.Номенклатура = втРасходЗаПериод.Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ГруппаНоменклатуры",  ГруппаНоменклатуры);  
	Запрос.УстановитьПараметр("ДатаНачала", 				 НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", 			 КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("ПериодДатаОкончания", Объект.Период.ДатаОкончания);   
	Запрос.УстановитьПараметр("ПериодДатаНачала", 	 Объект.Период.ДатаНачала);   	
	Запрос.УстановитьПараметр("Склад", 							 Объект.Склад);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Строка = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Период = Новый СтандартныйПериод;
	Период.ДатаНачала = Объект.Дата - 60*60*24 * 14;
	Период.ДатаОкончания = Объект.Дата;
	Если СтрНайти(Поле.Имя, "Спис") > 0 Или СтрНайти(Поле.Имя, "Пр") > 0 
			ИЛИ СтрНайти(Поле.Имя, "Расх") > 0 Тогда
		ПараметрыОткрытия = Новый Структура("СформироватьПриОткрытии", 
			Истина);
		ПараметрыОткрытия.Вставить("Отбор", 
		Новый Структура("Номенклатура, Склад, ПериодОтчета", Элементы.Товары.ТекущиеДанные.Номенклатура,
		Объект.Склад,
		Период)); 
		
		
			
			ОткрытьФорму("Отчет.ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры.Форма",
			ПараметрыОткрытия,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		//Отчетик = ПолучитьОтчет();  
		//ВариантыОтчетовКлиент.ОткрытьФормуОтчета(ЭтаФорма, Отчетик, ПараметрыОткрытия)	   
		//
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Дата = ТекущаяДата();
КонецПроцедуры


&НаКлиенте
Процедура РасчитатьКоэффициент(Команда)
	
	Для каждого Строка Из Объект.Товары Цикл  	
		Разница = Строка.Остаток - Строка.Период;	
		
		Если Строка.СтепеньПродоваемости = 1 Тогда
			Процент = Разница * Объект.Коэффициент1 / 100;   	
		ИначеЕсли Строка.СтепеньПродоваемости = 2 Тогда
			Процент = Разница * Объект.Коэффициент2 / 100;   
		ИначеЕсли Строка.СтепеньПродоваемости = 3 Тогда
			Процент = Разница * Объект.Коэффициент3 / 100;   
		Иначе
			Процент = Разница;
		КонецЕсли;
		
		КЗаказу = Разница + Процент;
		Строка.КЗаказу = ?(КЗаказу < 0, -КЗаказу, 0); 
	КонецЦикла;   
	ОкруглитьЗначенияКолонкиКЗаказу();
КонецПроцедуры


&НаКлиенте
Процедура СоздатьЗаказ(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение,"Создать документ Заказ поставщику?", Режим, 0);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    СоздатьЗаказПоТоварам();
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаказПоТоварам() 
		Попытка	
	
	Сумма = 0;
	//ввод основных реквизитов
	ОбъектДокумента = Документы.ЗаказПоставщику.СоздатьДокумент();
	ОбъектДокумента.Партнер 	= Поставщик;
	ОбъектДокумента.Дата 	 	= Объект.Дата;
	ОбъектДокумента.Приоритет 	= Справочники.Приоритеты.НайтиПоНаименованию("Средний");
	ОбъектДокумента.Организация = Справочники.Организации.НайтиПоНаименованию("Коков Вячеслав Михайлович ИП");
	ОбъектДокумента.Склад 		= Объект.Склад;
	ОбъектДокумента.ВариантПриемкиТоваров  = Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным;	
	ОбъектДокумента.Валюта 				   = Справочники.Валюты.НайтиПоНаименованию("RUB");
	ОбъектДокумента.НалогообложениеНДС 	   = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ОбъектДокумента.ЗакупкаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
	//Ввод табличной части
	Для Каждого Строка из Объект.Товары Цикл
		Если Строка.КЗаказу <> 0 Тогда
			ЦенаПоставщика = ПолучитьЦенуПоставщика(Строка.Номенклатура);
			СтрокаТЧДокумента = ОбъектДокумента.Товары.Добавить();
			СтрокаТЧДокумента.Номенклатура 	 	= Строка.Номенклатура;
			//СтрокаТЧДокумента.Номенклатура.ЕдиницаИзмерения = ПолучитьЕдиницуИзмерения(Строка.Товар);
			Если ЦенаПоставщика.ВидЦены = Неопределено Тогда
				ВызватьИсключение("Не указана цена поставщика у: " + Строка.Номенклатура); 
				
			КонецЕсли;
			СтрокаТЧДокумента.ВидЦеныПоставщика = ЦенаПоставщика.ВидЦены; //вид цены
			СтрокаТЧДокумента.Цена 				= ЦенаПоставщика.Цена;//цена
			СтрокаТЧДокумента.КоличествоУпаковок = Строка.КЗаказу;//Количество
			СтрокаТЧДокумента.Количество		= Строка.КЗаказу;
			СтрокаТЧДокумента.Сумма 			= ЦенаПоставщика.Цена * Строка.КЗаказу;//сумма
			СтрокаТЧДокумента.СтавкаНДС			= Перечисления.СтавкиНДС.БезНДС;
			СтрокаТЧДокумента.СуммаСНДС			= СтрокаТЧДокумента.Сумма;
			Сумма = Сумма + СтрокаТЧДокумента.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ОбъектДокумента.СуммаДокумента = Сумма;

		ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение);
		Сообщить("Документ успешно создан" + ОбъектДокумента);
	Исключение
		Сообщить("Не удалось создать документ!" + ОписаниеОшибки());
	КонецПопытки;
	
	
	
КонецПроцедуры // СоздатьЗаказПоТоварам()

//Запрос на получение цены и вида цен поставщика
//
&НаСервере
Функция ПолучитьЦенуПоставщика(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыПоставщиковСрезПоследних.Партнер КАК Поставщик,
		|	ЦеныНоменклатурыПоставщиковСрезПоследних.ВидЦеныПоставщика КАК ВидЦены,
		|	ЦеныНоменклатурыПоставщиковСрезПоследних.Цена КАК Цена,
		|	ЦеныНоменклатурыПоставщиковСрезПоследних.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
		|			&Период,
		|			Номенклатура = &Номенклатура
		|				И Партнер = &Поставщик) КАК ЦеныНоменклатурыПоставщиковСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	 
	Результат = Новый Структура("ВидЦены, Цена", ВыборкаДетальныеЗаписи.ВидЦены, ВыборкаДетальныеЗаписи.Цена); 	
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ОкруглитьЗначенияКолонкиКЗаказу()
	 ЕдИзШТ = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("шт");	
	
	 Для каждого Строка Из Объект.Товары Цикл
	 
		Если Строка.ЕдИзм = ЕдИзШТ Тогда
		 	Строка.КЗаказу =  Окр(Строка.КЗаказу, 0,РежимОкругления.Окр15как20);  
		Иначе
			Строка.КЗаказу =  Окр(Строка.КЗаказу, 2,РежимОкругления.Окр15как20); 
			
			Модуль = Строка.КЗаказу % 1;			
			Если Модуль = 0 Тогда 
				Округление = Строка.КЗаказу;
			ИначеЕсли Модуль < 0.5 Тогда
				Округление =  0.5 - Модуль + Строка.КЗаказу;	
			Иначе
				Округление = 1 - Модуль + Строка.КЗаказу;
			КонецЕсли;
			
			Строка.КЗаказу = Округление;
		КонецЕсли;
		 
	 КонецЦикла;

КонецПроцедуры 


&НаСервере
Функция ПолучитьОтчет()        
		Отчет = "Отчет.ВедомостьПоТоварамНаСкладах";
		Отчет1 = Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоНаименованию("Ведомость по товарам на складах (Отчет)");
		Пользователь = Справочники.Пользователи.НайтиПоНаименованию("Макашкина Елена");   
	  СписокКлючейОтчета = ВариантыОтчетов.КлючиВариантовОтчета(Отчет, Пользователь);
		НужныйКлюч = СписокКлючейОтчета[0].Значение; 
		ВариантОтчета = ВариантыОтчетов.ВариантОтчета(Отчет1, НужныйКлюч);  
		Возврат ВариантОтчета;	
КонецФункции 

&НаКлиенте
Процедура СортироватьПриИзменении(Элемент)
	ВыполнитьСортировку();	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСортировку()
	
	Если Сортировать Тогда
		Объект.Товары.Сортировать("Порядок Возр,СтепеньПродоваемости Возр, КЗаказу Убыв");	
	Иначе
		Объект.Товары.Сортировать("Порядок,Номенклатура");
	КонецЕсли;
	
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьИтогиФормы()

	ИтогВес 		 = 0;
	ИтогВесЗаказ = 0;
  ИтогВесСклад = 0;
	
	Для Каждого Строка Из Объект.Товары Цикл 
		ИтогВесЗаказ = Число(ИтогВесЗаказ) + Строка.Вес * Строка.КЗаказу;	
		ИтогВесСклад = Число(ИтогВесСклад) + Строка.Вес * Строка.Остаток; 
		
		Если Строка.Вес = 0 Тогда
			Сообщить(СтрШаблон("Нет веса номенклотуры: %1 Вес: %2",
				Строка.Номенклатура,
				Строка.Вес));
		КонецЕсли;
		
	КонецЦикла;
	
	ИтогВес = Число(ИтогВесСклад) + Число(ИтогВесЗаказ); 
	

КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СписокНоменклатуры", Объект.Товары);
	
	ОткрытьФорму("ВнешняяОбработка.Заявочник.Форма.ФормаСправочникаНоменклатуры", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКЗаказуПриИзменении(Элемент)
	ОбновитьИтогиФормы();
КонецПроцедуры
